// http://ionicframework.com/docs/theming/

.scroll-content{
  background-color: color($colors,light);
  font-family: 'Open Sans', sans-serif;
  
}
.menu-inner{
  .content{
    background-color: color($colors,primary);
    -webkit-background-size: cover;
    background-size: cover;
    text-align: center;
  }
  .user-identification{
    padding: 35px 0px 20px;
    margin: -5px 10px 20px;

    .user-name{
      color: white;
      font-size: 18px;
      font-weight: bold;
    }

    .user-email{
      color: #ffffff;
      font-size: 12px;

    }
  }

  .title-left{
    position: relative;
    margin-left: 0px;
    font-size: 12px;
  }
  .circulo {
    margin: 0px 5px;
    float: left;
    border-radius: 50%;
    overflow: hidden;
    width: 50px;
    height: 50px;

  }

  .circulo div {
      width: 100%;
      height: 100%;
      overflow: hidden;
      background-size: cover; /*ajusta a imagem dentro do div, mantendo a proporção da imagem */
      background-position: center center
  }
  div.boxinner {
    width: 60px;
    height: 60px;
    float: left;
    animation: pulse 1.5s infinite linear;
    animation-timing-function: ease;
  }

  button{
    background: transparent;

    .item-inner{
      background-image: none !important;
      border: none;
    }

    .label{
      color: white;
      font-weight: 500;
      font-size: 16px;
    }
  }

}

.options-icon{
      margin-left: 35%;
      margin-right: 50%;
      display: block;
      width: 50px;
      height: 50px;
    }

 .scroll-content{
   icon{
     color: color($colors,primary);
   }
 }
    
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

    
